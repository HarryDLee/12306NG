#!/bin/bash

#--------------------------------------------
# 功能：打ipa包并生成发布文件
# 作者：SunLei
# E-mail:qmxsoft@gmail.com
# 创建日期：2012/12/31
#--------------------------------------------



build_path=${BUILT_PRODUCTS_DIR}
ipa_name=${PRODUCT_NAME}
project_path=${SRCROOT};

target_name=${PRODUCT_NAME}
project_name=${PRODUCT_NAME}

#appid=${PRODUCT_NAME:rfc1034identifier}
appid="-2306NG"
svn_path=~/duapp/appid9fk26ed7x4/0/12306NG




pulish_url="http://appbus.duapp.com"



cd $build_path

#显示参数

echo $target_name > info.txt


#打包生成ipa

if [ -d ./ipa-build ];then
rm -rf ipa-build
fi

mkdir -p ipa-build/Payload
cp -r ./"*.app" ./ipa-build/Payload/
cd ipa-build
zip -r ${PRODUCT_NAME}.ipa *
rm -rf Payload



#创建发布文件

#拷贝ipa
cd $build_path



if [ -d ./$target_name ];then
rm -rf $target_name
fi

mkdir $target_name
cp ./ipa-build/"*.ipa" ./$target_name/${target_name}.ipa

if [ -d ./ipa-build ];then
rm -rf ipa-build
fi

cd $target_name


#工程配置文件路径

#project_name=$(ls | grep xcodeproj | awk -F.xcodeproj '{print $1}')

project_infoplist_path=${project_path}/${project_name}/${project_name}-Info.plist
#取build值
bundleVersion=$(/usr/libexec/PlistBuddy -c "print CFBundleVersion" ${project_infoplist_path})
#取bundle Identifier前缀
#bundlePrefix=$(/usr/libexec/PlistBuddy -c "print CFBundleIdentifier" `find . -name "*-Info.plist"` | awk -F$ '{print $1}')
bundlePrefix=$(/usr/libexec/PlistBuddy -c "print CFBundleIdentifier" ${project_infoplist_path} | awk -F$ '{print $1}')


#生成install.html文件
cat << EOF > index.html
<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>安装此软件</title>
</head>
<body>
<br>
<br>
<br>
<br>
<p align=center>
<font size="8">
<a href="itms-services://?action=download-manifest&url=${pulish_url}/Latest.plist">点击这里安装</a>
</font>
</p>

</div>
</body>
</html>
EOF
#生成plist文件
cat << EOF > Latest.plist
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>items</key>
<array>
<dict>
<key>assets</key>
<array>
<dict>
<key>kind</key>
<string>software-package</string>
<key>url</key>
<string>${pulish_url}/${target_name}/${target_name}.ipa</string>
</dict>
<dict>
<key>kind</key>
<string>display-image</string>
<key>needs-shine</key>
<true/>
<key>url</key>
<string>${pulish_url}/${target_name}/icon.png</string>
</dict>
<dict>
<key>kind</key>
<string>full-size-image</string>
<key>needs-shine</key>
<true/>
<key>url</key>
<string>${pulish_url}/${target_name}/icon.png</string>
</dict>
</array><key>metadata</key>
<dict>
<key>bundle-identifier</key>
<string>${bundlePrefix}$appid</string>
<key>bundle-version</key>
<string>${bundleVersion}</string>
<key>kind</key>
<string>software</string>
<key>subtitle</key>
<string>${ipa_name}</string>
<key>title</key>
<string>${ipa_name}</string>
</dict>
</dict>
</array>
</dict>
</plist>

EOF

cp * $svn_path

cd $svn_path
svn ci -m "publish a new version_$(date)"
open $svn_path





